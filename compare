from instream import InStream
from outstream import OutStream
from sketch import Sketch


k = 5
d = 10000


class PageBroken(Exception):
    def __innit__(self):
        Exception.__init__(self,"Error during parsing occurred: check front-end web development")


class JokesGrabber:
    def __init__(self, website):
        self._website = website

    def readhtml(self, i):
        page = InStream(self._website + str(i))
        return page.readAll()

    def getjokes(self, html):
        end = 0
        trade = 0
        all_jokes = []
        while trade != -1:
            trade = html.find('<section class="body">fjgjtt', end)
            if trade == -1 and end == 0:
                raise PageBroken()
            beg = html.find('>', trade)
            end = html.find('</section>', beg)
            joke = html[beg + 1:end]
            joke = joke.replace('<br />', '')
            joke = joke.replace('&quot;', '')
            joke = joke.replace('            ', '')
            all_jokes += [joke]
        return all_jokes


class Jokes:
    def __init__(self, filename):
        self._text = InStream(filename)

    def jokes(self):
        t = self._text
        a = []
        while t.hasNextLine():
            str = t.readLine()
            if (not str.isspace()) and (str != ''):
                a += [[str, Sketch(str, k, d)]]
        return a


class News:
    def __init__(self, filename):
        self._text = InStream(filename)

    def news(self):
        t = self._text
        a = []
        while t.hasNextLine():
            str = t.readLine()
            a += [[str, Sketch(str, k, d)]]
        return a


class Compare:
    def __init__(self, file1, file2):
        n = News(file1)
        j = Jokes(file2)
        self._news = n.news()
        self._jokes = j.jokes()

    def compare(self):
        max = []
        news = self._news
        jokes = self._jokes
        for i in range(len(news)):
            m = 0.0
            k = 0
            for j in range(len(jokes)):
                if news[i][1].similarTo(jokes[j][1]) > m:
                    m = news[i][1].similarTo(jokes[j][1])
                    k = j
            max += [k]
        out = OutStream("result.txt")
        for i in range(len(news)):
            out.writeln(news[i][0])
            out.writeln(jokes[max[i]][0])
            out.writeln("")

def main():
    try:
        site = "http://laps.zahav.ru/jokes/list/"
        grab = JokesGrabber(site)
        file1 = "news.txt"
        file2 = "jokes.txt"
        out = OutStream(file2)
        for page in range(2, 20):
            a = grab.getjokes(grab.readhtml(page))
            for i in range(len(a) - 1):
                out.writeln(a[i])
        res = Compare(file1, file2)
        res.compare()
    except OSError:
        print("No such file/URL or you are disconnected from Internet")


if __name__ == '__main__':
    main()
